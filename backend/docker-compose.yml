version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aba-postgres
    environment:
      POSTGRES_DB: aba_db
      POSTGRES_USER: aba_user
      POSTGRES_PASSWORD: aba_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aba-network

  # Redis for queues and caching
  redis:
    image: redis:7-alpine
    container_name: aba-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aba-network

  # ABA Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aba-api
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgresql://aba_user:aba_password@postgres:5432/aba_db
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      WHATSAPP_API_TOKEN: ${WHATSAPP_API_TOKEN}
      MERCADOPAGO_ACCESS_TOKEN: ${MERCADOPAGO_ACCESS_TOKEN}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - aba-network
    restart: unless-stopped

  # ABA Worker (message processing)
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aba-worker
    command: npm run worker:prod
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://aba_user:aba_password@postgres:5432/aba_db
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      WHATSAPP_API_TOKEN: ${WHATSAPP_API_TOKEN}
      MERCADOPAGO_ACCESS_TOKEN: ${MERCADOPAGO_ACCESS_TOKEN}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    depends_on:
      - postgres
      - redis
      - api
    volumes:
      - ./uploads:/app/uploads
    networks:
      - aba-network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: aba-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - aba-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  aba-network:
    driver: bridge
